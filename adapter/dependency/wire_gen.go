// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package dependency

import (
	"context"
	"go-hexagonal/adapter/repository/mysql/entity"
	"go-hexagonal/domain/event"
	"go-hexagonal/domain/service"
)

// InitializeServices initializes all services
func InitializeServices(ctx context.Context) (*service.Services, error) {
	// Create repositories
	entityExample := entity.NewExample()

	// Create event bus and handlers
	inMemoryEventBus := event.NewInMemoryEventBus()
	loggingHandler := event.NewLoggingEventHandler()
	exampleHandler := event.NewExampleEventHandler()

	// Register event handlers
	inMemoryEventBus.Subscribe(loggingHandler)
	inMemoryEventBus.Subscribe(exampleHandler)

	// Create services
	exampleService := service.NewExampleService(ctx)
	exampleService.Repository = entityExample
	exampleService.EventBus = inMemoryEventBus

	// Create services container
	services := service.NewServices(exampleService, inMemoryEventBus)

	return services, nil
}

// Injected is an alias for InitializeServices for backward compatibility
func Injected(ctx context.Context) (*service.Services, error) {
	return InitializeServices(ctx)
}
